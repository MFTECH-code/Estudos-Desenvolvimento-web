let ComparaComThis = function (param) {
    console.log(param === this);
}
ComparaComThis(global); // Aqui vemos que quando estamos em uma função normal o this aponta para o escopo global.
ComparaComThis(this); // O THIS NÃO É O THIS...
const obj = {};
ComparaComThis = ComparaComThis.bind(obj); // Agora o this aponta para o escopo do objeto e não mais para o escopo global.
ComparaComThis(global); // False...
ComparaComThis(obj); // True...

// Na arrow function o this não aponta para o escopo global...
let ComparaComThisArrow = param => console.log(param === this);
ComparaComThisArrow(global); // False
// O this aqui agora aponta para o próprio módulo...
ComparaComThisArrow(module.exports); // True
ComparaComThisArrow(this);
// Como vimos o this não varia em uma arrow function...
ComparaComThisArrow = ComparaComThisArrow.bind(obj);
ComparaComThisArrow(obj); // False..
ComparaComThisArrow(module.exports); // True...